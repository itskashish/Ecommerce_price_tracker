code - 

import requests
from bs4 import BeautifulSoup
import smtplib
import time  # Adding the missing import statement for time module

# Function to fetch product price from Myntra URL
def fetch_product_price(url):
    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'html.parser')
    price_element = soup.find('div', class_='product-discountedPrice')
    if price_element:
        return float(price_element.text.strip().replace('Rs.', '').replace(',', ''))
    else:
        return None

# Function to send email notification for price drop
def send_email_notification(product_name, current_price, target_price, product_url):
    sender_email = "your_email@gmail.com"  # Change this to your email address
    receiver_email = "recipient_email@gmail.com"  # Change this to the recipient's email address
    password = "your_email_password"  # Change this to your email password

    message = f"Subject: Price drop alert: {product_name}\n\n"
    message += f"The price of {product_name} has dropped to Rs.{current_price}! Check it out here: {product_url}"

    with smtplib.SMTP('smtp.gmail.com', 587) as server:
        server.starttls()
        server.login(sender_email, password)
        server.sendmail(sender_email, receiver_email, message)

# Main function to track prices
def track_prices(product_url, target_price):
    while True:
        current_price = fetch_product_price(product_url)
        if current_price is not None and current_price < target_price:
            send_email_notification("Product Name", current_price, target_price, product_url)
            break  # Exit the loop after sending notification
        else:
            print("Price is still above the target. Waiting for the price to drop...")
            time.sleep(300)  # Wait for 5 minutes before checking again

# Start tracking prices
if __name__ == "__main__":
    product_url = 'https://www.myntra.com/'
    target_price = 1000  # Set your desired target price
    track_prices(product_url, target_price)
